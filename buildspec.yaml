version: 0.2

phases:
  install:
    runtime-versions:
      docker: 18
      golang: 1.12
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - export GOPATH=${HOME}/go && echo ${GOPATH}
      - export PATH=/usr/local/go/bin:${GOPATH}/bin:${PATH} && echo ${PATH}
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker images
      - go get -d github.com/gocql/gocql
      - echo `find / -name conn.go|tail -n 1`
      - echo `find / -name gocql.a`
      - patch --ignore-whitespace -u  `find / -name conn.go|tail -n 1` < diff.patch
      - head -n 50 `find / -name conn.go|tail -n 1`
      - rm -f `find / -name gocql.a`
      - wget -O- -nv https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.21.0
      - ./bin/golangci-lint --version
      - ./bin/golangci-lint run
      - go test -v
      - GOOS=linux GOARCH=amd64 CGO_ENABLED=0  go build ./main.go
      - docker build -t $IMAGE_REPO_NAME .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - docker images
      - #docker run  -e  CASSANDRA_ENDPOINT="cassandra.ap-northeast-1.amazonaws.com"


  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
